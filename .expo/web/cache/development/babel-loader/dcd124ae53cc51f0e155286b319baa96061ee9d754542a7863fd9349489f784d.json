{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport About from \"./About\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Nav() {\n  var Stack = createNativeStackNavigator();\n  function ScreenStack() {\n    return _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        screenOptions: {\n          headerTintColor: 'white',\n          headerStyle: {\n            backgroundColor: 'purple'\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            title: 'Home'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: Profile,\n          options: {\n            title: 'Profile'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"About\",\n          component: About,\n          options: {\n            title: 'About'\n          }\n        })]\n      })\n    });\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Navigation Menu\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return ScreenStack.navigate('Home', {});\n      },\n      title: \"Go to Home Page\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return ScreenStack.navigate('Profile', {});\n      },\n      title: \"Go to Profile Page\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return ScreenStack.navigate('Home', {});\n      },\n      title: \"Go to About Page\"\n    })]\n  });\n}\n;","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","Home","Profile","About","View","jsx","_jsx","jsxs","_jsxs","Nav","Stack","ScreenStack","children","Navigator","initialRouteName","screenOptions","headerTintColor","headerStyle","backgroundColor","Screen","name","component","options","title","Text","Button","onPress","navigate"],"sources":["/home/chrystal/Projects/expo-apps/playground/components/screens/Nav.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport Home from './Home';\nimport Profile from './Profile';\nimport About from './About';\nimport { View } from 'react-native-web';\n\n\nexport default function Nav(){\n    const Stack = createNativeStackNavigator();\n\n    function ScreenStack(){\n        return(\n            <NavigationContainer>\n                <Stack.Navigator\n                    initialRouteName=\"Home\"\n                    screenOptions={{\n                    headerTintColor: 'white',\n                    headerStyle: { backgroundColor: 'purple' },\n                    }}\n                >\n                    <Stack.Screen\n                        name=\"Home\"\n                        component={Home}\n                        options={{\n                        title: 'Home',\n                        }}\n                    />\n                    <Stack.Screen\n                        name=\"Profile\"\n                        component={Profile}\n                        options={{\n                        title: 'Profile',\n                        }}\n                    />\n                    <Stack.Screen\n                        name=\"About\"\n                        component={About}\n                        options={{\n                        title: 'About',\n                        }}\n                    />\n                </Stack.Navigator>\n            </NavigationContainer>\n          );\n    }\n\n    return(\n        <View><Text>Navigation Menu</Text>\n            <Button\n                onPress={() =>\n                    ScreenStack.navigate('Home', { })\n                }\n                title=\"Go to Home Page\"\n            />\n            <Button\n                onPress={() =>\n                    ScreenStack.navigate('Profile', { })\n                }\n                title=\"Go to Profile Page\"\n            />\n            <Button\n                onPress={() =>\n                    ScreenStack.navigate('Home', { })\n                }\n                title=\"Go to About Page\"\n            />\n        </View>\n    );\n};"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,OAAOC,IAAI;AACX,OAAOC,OAAO;AACd,OAAOC,KAAK;AAAgB,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI5B,eAAe,SAASC,GAAGA,CAAA,EAAE;EACzB,IAAMC,KAAK,GAAGV,0BAA0B,CAAC,CAAC;EAE1C,SAASW,WAAWA,CAAA,EAAE;IAClB,OACIL,IAAA,CAACP,mBAAmB;MAAAa,QAAA,EAChBJ,KAAA,CAACE,KAAK,CAACG,SAAS;QACZC,gBAAgB,EAAC,MAAM;QACvBC,aAAa,EAAE;UACfC,eAAe,EAAE,OAAO;UACxBC,WAAW,EAAE;YAAEC,eAAe,EAAE;UAAS;QACzC,CAAE;QAAAN,QAAA,GAEFN,IAAA,CAACI,KAAK,CAACS,MAAM;UACTC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAEpB,IAAK;UAChBqB,OAAO,EAAE;YACTC,KAAK,EAAE;UACP;QAAE,CACL,CAAC,EACFjB,IAAA,CAACI,KAAK,CAACS,MAAM;UACTC,IAAI,EAAC,SAAS;UACdC,SAAS,EAAEnB,OAAQ;UACnBoB,OAAO,EAAE;YACTC,KAAK,EAAE;UACP;QAAE,CACL,CAAC,EACFjB,IAAA,CAACI,KAAK,CAACS,MAAM;UACTC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAElB,KAAM;UACjBmB,OAAO,EAAE;YACTC,KAAK,EAAE;UACP;QAAE,CACL,CAAC;MAAA,CACW;IAAC,CACD,CAAC;EAE9B;EAEA,OACIf,KAAA,CAACJ,IAAI;IAAAQ,QAAA,GAACN,IAAA,CAACkB,IAAI;MAAAZ,QAAA,EAAC;IAAe,CAAM,CAAC,EAC9BN,IAAA,CAACmB,MAAM;MACHC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACLf,WAAW,CAACgB,QAAQ,CAAC,MAAM,EAAE,CAAE,CAAC,CAAC;MAAA,CACpC;MACDJ,KAAK,EAAC;IAAiB,CAC1B,CAAC,EACFjB,IAAA,CAACmB,MAAM;MACHC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACLf,WAAW,CAACgB,QAAQ,CAAC,SAAS,EAAE,CAAE,CAAC,CAAC;MAAA,CACvC;MACDJ,KAAK,EAAC;IAAoB,CAC7B,CAAC,EACFjB,IAAA,CAACmB,MAAM;MACHC,OAAO,EAAE,SAAAA,QAAA;QAAA,OACLf,WAAW,CAACgB,QAAQ,CAAC,MAAM,EAAE,CAAE,CAAC,CAAC;MAAA,CACpC;MACDJ,KAAK,EAAC;IAAkB,CAC3B,CAAC;EAAA,CACA,CAAC;AAEf;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}