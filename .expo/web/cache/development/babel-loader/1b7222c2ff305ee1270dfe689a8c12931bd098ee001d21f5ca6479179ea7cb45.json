{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function WildPet() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  function toggleVisibility() {\n    return setVisible(!visible);\n  }\n  ;\n  var happyWolf = require(\"./assets/tempHappywolf.png\");\n  var angryWolf = require(\"./assets/tempAngrywolf.png\");\n  var _useState3 = useState(80),\n    _useState4 = _slicedToArray(_useState3, 2),\n    happyStatus = _useState4[0],\n    setHappyStatus = _useState4[1];\n  var _useState5 = useState(80),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fullStatus = _useState6[0],\n    setFullStatus = _useState6[1];\n  var _useState7 = useState(80),\n    _useState8 = _slicedToArray(_useState7, 2),\n    entertainedStatus = _useState8[0],\n    setEntertainedStatus = _useState8[1];\n  var _useState9 = useState(\"I am your pet!\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    petMessage = _useState10[0],\n    setPetMessage = _useState10[1];\n  var _useState11 = useState(happyWolf),\n    _useState12 = _slicedToArray(_useState11, 2),\n    mood = _useState12[0],\n    setMood = _useState12[1];\n  var myPet = {\n    petName: 'Fido'\n  };\n  function updateMoodAndMessage() {\n    if (fullStatus > 70 && happyStatus > 70 && entertainedStatus > 70) {\n      setPetMessage(\"I am loved!\");\n      setMood(happyWolf);\n    } else if (fullStatus <= 70 || happyStatus <= 70 || entertainedStatus <= 70) {\n      setMood(angryWolf);\n      setPetMessage(\"I need you.\");\n    }\n    ;\n    return;\n  }\n  ;\n  function increaseValues(status, increment) {\n    return Math.min(Math.max(status + increment, 100), 0);\n  }\n  function decreaseValues(status, increment) {\n    return Math.min(Math.max(status - increment), 100), 0;\n  }\n  function pet() {\n    setHappyStatus(increaseValues(happyStatus, 10));\n    setEntertainedStatus(entertainedStatus + 10);\n    updateMoodAndMessage();\n    return;\n  }\n  function feed() {\n    setFullStatus(fullStatus + 10);\n    setHappyStatus(happyStatus + 10);\n    updateMoodAndMessage();\n    return;\n  }\n  ;\n  function play() {\n    setEntertainedStatus(entertainedStatus + 10);\n    setHappyStatus(happyStatus + 10);\n    setFullStatus(fullStatus - 10);\n    updateMoodAndMessage();\n    return;\n  }\n  ;\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsxs(Pressable, {\n      onPress: toggleVisibility,\n      children: [_jsx(Text, {\n        style: styles.h1,\n        children: \"My Wild Pet\"\n      }), _jsx(Text, {\n        children: \"Personal task, inspired by a popular digital pet game. \"\n      }), _jsx(Text, {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: \"Click to view.\"\n      })]\n    }), _jsxs(View, {\n      style: visible ? styles.showPet : styles.hide,\n      children: [_jsxs(View, {\n        style: styles.petContainer,\n        children: [_jsx(Text, {\n          children: myPet.petName\n        }), _jsx(Text, {\n          children: petMessage\n        }), _jsxs(Text, {\n          children: [\"Happy: \", happyStatus, \" | Full: \", fullStatus, \" | Entertained: \", entertainedStatus]\n        }), _jsx(View, {\n          style: styles.petMood,\n          children: _jsx(Image, {\n            style: styles.img,\n            source: mood\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.buttonRow,\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: pet,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Pet\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: feed,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Feed\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: play,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Play\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    height: 'auto',\n    marginTop: 10\n  },\n  h1: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  hide: {\n    display: 'none',\n    height: 10\n  },\n  showPet: {\n    alignItems: 'center',\n    height: 'auto',\n    width: 300\n  },\n  petContainer: {\n    height: 200,\n    width: 'auto',\n    alignItems: 'center'\n  },\n  petMood: {\n    backgroundColor: '#fff'\n  },\n  img: {\n    height: 150,\n    width: 150\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    height: 50,\n    width: 'auto',\n    alignItems: 'center'\n  },\n  button: {\n    borderRadius: 10,\n    height: 25,\n    width: 60,\n    backgroundColor: 'blue',\n    alignContent: 'center',\n    justifyContent: 'center',\n    margin: 1\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","Pressable","StyleSheet","Text","View","Image","useState","jsx","_jsx","jsxs","_jsxs","WildPet","_useState","_useState2","_slicedToArray","visible","setVisible","toggleVisibility","happyWolf","require","angryWolf","_useState3","_useState4","happyStatus","setHappyStatus","_useState5","_useState6","fullStatus","setFullStatus","_useState7","_useState8","entertainedStatus","setEntertainedStatus","_useState9","_useState10","petMessage","setPetMessage","_useState11","_useState12","mood","setMood","myPet","petName","updateMoodAndMessage","increaseValues","status","increment","Math","min","max","decreaseValues","pet","feed","play","style","styles","body","children","onPress","h1","fontStyle","showPet","hide","petContainer","petMood","img","source","buttonRow","button","buttonLabel","create","flex","backgroundColor","alignItems","height","marginTop","fontWeight","fontSize","textAlign","display","width","flexDirection","borderRadius","alignContent","justifyContent","margin","color"],"sources":["/home/chrystal/Projects/expo-apps/playground/components/screens/Projects/WildPet.js"],"sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet, Text, View, Image } from 'react-native';\nimport { useState } from 'react';\n\nexport default function WildPet(){\n    const [visible, setVisible] = useState(true);\n   \n    function toggleVisibility(){\n        return setVisible(!visible);\n    };\n\n    const happyWolf = require('./assets/tempHappywolf.png');\n    const angryWolf = require('./assets/tempAngrywolf.png');  \n\n    const [happyStatus, setHappyStatus] = useState(80);\n    const [fullStatus, setFullStatus] = useState(80);\n    const [entertainedStatus, setEntertainedStatus] = useState(80);\n    const [petMessage, setPetMessage] = useState(\"I am your pet!\");\n    const [mood, setMood] = useState(happyWolf);\n\n    var myPet = {\n        petName: 'Fido',\n        //additional details to be added.\n    };\n\n    function updateMoodAndMessage () {\n        if(fullStatus > 70 && happyStatus > 70 && entertainedStatus > 70){\n            setPetMessage(\"I am loved!\");\n            setMood(happyWolf);\n            //console.log(mood);\n        }else if(fullStatus <= 70 || happyStatus <= 70 || entertainedStatus <= 70){\n            setMood(angryWolf);\n            setPetMessage(\"I need you.\");\n            //console.log(mood);\n        };\n        //addition outputs to be added.\n        return;\n    };\n\n    function increaseValues (status, increment) {\n        return (Math.min(Math.max((status+increment),100),0));\n    }\n    function decreaseValues (status, increment) {\n        return (Math.min(Math.max(status-increment),100),0)\n    }\n\n    function pet () {\n        setHappyStatus(increaseValues(happyStatus,10));\n        setEntertainedStatus(entertainedStatus+10);\n        //updateMessage();\n        updateMoodAndMessage();\n        //console.log('Pet:',happyStatus,fullStatus,entertainedStatus);\n        return;\n    }\n    function feed () {\n        setFullStatus(fullStatus+10);\n        setHappyStatus(happyStatus+10);\n        //updateMessage();\n        updateMoodAndMessage();\n        //console.log('Feed:',happyStatus,fullStatus,entertainedStatus);\n        return;\n    };\n    function play () {\n        setEntertainedStatus(entertainedStatus+10);\n        setHappyStatus(happyStatus+10);\n        setFullStatus(fullStatus-10);\n        //updateMessage();\n        updateMoodAndMessage();\n        //console.log('Play:',happyStatus,fullStatus,entertainedStatus);\n        return;\n    };\n \n    return(\n        <View style={styles.body}>\n            <Pressable onPress={toggleVisibility}>\n                <Text style={styles.h1}>My Wild Pet</Text>\n                <Text>Personal task, inspired by a popular digital pet game. </Text>\n                <Text style={{fontStyle: 'italic'}}>Click to view.</Text>\n            </Pressable>\n            <View style={visible ? styles.showPet : styles.hide}>\n                <View style={styles.petContainer}>\n                    <Text>{myPet.petName}</Text>\n                    <Text>{petMessage}</Text>\n                    <Text>Happy: {happyStatus} | Full: {fullStatus} | Entertained: {entertainedStatus}</Text>\n                    <View style={styles.petMood}>\n                        <Image style={styles.img} source={mood}/>\n                    </View>\n                </View>\n                <View style={styles.buttonRow}>\n                    <Pressable style={styles.button} onPress={pet}>\n                        <Text style={styles.buttonLabel}>Pet</Text>\n                    </Pressable> \n                    <Pressable style={styles.button} onPress={feed}>\n                        <Text style={styles.buttonLabel}>Feed</Text>\n                    </Pressable> \n                    <Pressable style={styles.button} onPress={play}>\n                        <Text style={styles.buttonLabel}>Play</Text>\n                    </Pressable>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    body:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: 10,\n    },\n    h1:{\n        fontWeight:\"bold\",\n        fontSize: 18,\n        textAlign: 'center',\n    },\n    hide:{\n        display: 'none',\n        height: 10,\n    },\n    showPet:{\n        //display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        width: 300,\n    },\n    petContainer:{\n        height: 200,\n        width: 'auto',\n        alignItems: 'center',\n    },\n    petMood:{\n        backgroundColor: '#fff',\n    },\n    img:{\n        height: 150,\n        width: 150,\n    },\n    buttonRow:{\n        flexDirection: 'row',\n        height: 50,\n        width: 'auto',\n        alignItems: 'center',\n    },\n    button:{\n        borderRadius: 10, \n        height: 25,\n        width: 60,\n        backgroundColor: 'blue',\n        alignContent: 'center',\n        justifyContent: 'center',\n        margin: 1,\n    },\n    buttonLabel: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 15,\n        textAlign: 'center',\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}