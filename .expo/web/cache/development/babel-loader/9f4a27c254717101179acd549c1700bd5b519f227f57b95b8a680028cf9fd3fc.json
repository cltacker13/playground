{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SimpleCalc() {\n  var inputRef = useRef(null);\n  var resultRef = useRef(null);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    result = _useState2[0],\n    setResult = _useState2[1];\n  function plus(e) {\n    e.preventDefault();\n    setResult(function (result) {\n      return result + Number(inputRef.current.value);\n    });\n  }\n  ;\n  function minus(e) {\n    e.preventDefault();\n    setResult(function (result) {\n      return result - Number(inputRef.current.value);\n    });\n  }\n  ;\n  function times(e) {\n    e.preventDefault();\n    setResult(function (result) {\n      return result * Number(inputRef.current.value);\n    });\n  }\n  ;\n  function divide(e) {\n    e.preventDefault();\n    setResult(function (result) {\n      return result / Number(inputRef.current.value);\n    });\n  }\n  ;\n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.value = null;\n  }\n  ;\n  function resetAll(e) {\n    e.preventDefault();\n    setResult(0);\n    inputRef.current.value = null;\n  }\n  ;\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsx(Text, {\n      style: styles.h1,\n      children: \"Simple Calculator\"\n    }), _jsx(View, {\n      children: _jsxs(\"form\", {\n        children: [_jsx(\"p\", {\n          ref: resultRef,\n          children: result\n        }), _jsx(\"input\", {\n          pattern: \"[0-9]\",\n          ref: inputRef,\n          type: \"number\",\n          placeholder: \"Type a number\"\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: plus,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"+\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: minus,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"-\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: times,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"*\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: divide,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"/\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: resetInput,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Reset Input\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: resetAll,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Reset All\"\n          })\n        })]\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    height: 'auto',\n    marginTop: 10\n  },\n  h1: {\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  button: {\n    borderRadius: 25,\n    height: 25,\n    width: 100,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 1\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15\n  }\n});","map":{"version":3,"names":["React","Pressable","StyleSheet","Text","View","useState","useRef","jsx","_jsx","jsxs","_jsxs","SimpleCalc","inputRef","resultRef","_useState","_useState2","_slicedToArray","result","setResult","plus","e","preventDefault","Number","current","value","minus","times","divide","resetInput","resetAll","style","styles","body","children","h1","ref","pattern","type","placeholder","button","onPress","buttonLabel","create","flex","backgroundColor","alignItems","height","marginTop","fontWeight","fontSize","borderRadius","width","justifyContent","margin","color"],"sources":["/home/chrystal/Projects/expo-apps/playground/components/screens/Projects/SimpleCalc.js"],"sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\nimport { useState, useRef } from \"react\";\n\nexport default function SimpleCalc(){\n    const inputRef = useRef(null); \n    const resultRef = useRef(null); \n    const [result, setResult] = useState(0); \n   \n    function plus(e) { \n      e.preventDefault(); \n      setResult((result) => result + Number(inputRef.current.value));\n    }; \n   \n    function minus(e) { \n      e.preventDefault(); \n      setResult((result) => result - Number(inputRef.current.value));\n    };\n   \n    function times(e) { \n      e.preventDefault(); \n      setResult((result) => result * Number(inputRef.current.value));\n    }; \n   \n    function divide(e) { \n      e.preventDefault(); \n      setResult((result) => result / Number(inputRef.current.value));\n    };\n   \n    function resetInput(e) { \n      e.preventDefault();\n      inputRef.current.value = null;\n    };\n   \n    function resetAll(e) { \n      e.preventDefault();\n      setResult(0);\n      inputRef.current.value = null;\n  \n    }; \n    return(\n        <View style={styles.body}>\n            <Text style={styles.h1}>Simple Calculator</Text>\n            <View>\n                <form> \n                <p ref={resultRef}> \n                    {result} \n                </p> \n                <input\n                    pattern=\"[0-9]\" \n                    ref={inputRef} \n                    type=\"number\" \n                    placeholder=\"Type a number\" \n                /> \n                <Pressable style={styles.button} \n                    onPress={plus}><Text style={styles.buttonLabel}>+</Text></Pressable> \n                <Pressable style={styles.button} \n                    onPress={minus}><Text style={styles.buttonLabel}>-</Text></Pressable> \n                <Pressable style={styles.button} \n                    onPress={times}><Text style={styles.buttonLabel}>*</Text></Pressable> \n                <Pressable style={styles.button} \n                    onPress={divide}><Text style={styles.buttonLabel}>/</Text></Pressable> \n                <Pressable style={styles.button} \n                    onPress={resetInput}><Text style={styles.buttonLabel}>Reset Input</Text></Pressable> \n                <Pressable style={styles.button} \n                    onPress={resetAll}><Text style={styles.buttonLabel}>Reset All</Text></Pressable> \n                </form> \n            </View>\n        </View>\n      );\n};\n\nconst styles = StyleSheet.create({\n    body:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: 10,\n    },\n    h1:{\n        fontWeight:\"bold\",\n        fontSize: 18,\n    },\n    button:{\n        borderRadius: 25, \n        height: 25,\n        width: 100,\n        backgroundColor: 'orange',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 1,\n    },\n    buttonLabel: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}