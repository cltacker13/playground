{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState, useRef } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SimpleCalc() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var inputRef = useRef(null);\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    result = _useState4[0],\n    setResult = _useState4[1];\n  function toggleVisibility() {\n    return setVisible(!visible);\n  }\n  function plus(e) {\n    setResult(function (result) {\n      return result + Number(inputRef.current.value);\n    });\n    Alert(result, '+', inputRef.current.value);\n  }\n  ;\n  function minus(e) {\n    setResult(function (result) {\n      return result - Number(inputRef.current.value);\n    });\n  }\n  ;\n  function times(e) {\n    setResult(function (result) {\n      return result * Number(inputRef.current.value);\n    });\n  }\n  ;\n  function divide(e) {\n    if (result !== 0) {\n      setResult(function (result) {\n        return result / Number(inputRef.current.value);\n      });\n    }\n    ;\n  }\n  ;\n  function resetInput(e) {\n    setInputRef(null);\n  }\n  ;\n  function resetAll(e) {\n    setResult(0);\n    setInputRef(null);\n  }\n  ;\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsxs(Pressable, {\n      onPress: toggleVisibility,\n      children: [_jsx(Text, {\n        style: styles.h1,\n        children: \"Simple Calculator\"\n      }), _jsx(Text, {\n        children: \"A task from a React Education Course to create the simplest working calculator. \"\n      }), _jsx(Text, {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: \"Click to view.\"\n      })]\n    }), _jsxs(View, {\n      style: visible ? styles.showCalc : styles.hide,\n      children: [_jsx(Text, {\n        style: styles.result,\n        children: result\n      }), _jsx(TextInput, {\n        ref: inputRef,\n        style: styles.inputbox,\n        placeholder: \"Type a number\",\n        inputMode: \"numeric\"\n      }), _jsxs(View, {\n        style: styles.buttonRow,\n        children: [_jsx(Pressable, {\n          style: styles.opButton,\n          onPress: plus,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"+\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.opButton,\n          onPress: minus,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"-\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.opButton,\n          onPress: times,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"*\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.opButton,\n          onPress: divide,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"/\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.buttonRow,\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: resetInput,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Reset Input\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: resetAll,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Reset All\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    height: 500,\n    marginTop: 10\n  },\n  h1: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  hide: {\n    display: 'none',\n    height: 10\n  },\n  showCalc: {\n    alignItems: 'center',\n    height: 'auto',\n    width: 300\n  },\n  result: {\n    margin: 5\n  },\n  inputbox: {\n    margin: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'orange',\n    padding: 2\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    width: 'auto',\n    alignItems: 'center'\n  },\n  opButton: {\n    borderRadius: 10,\n    height: 25,\n    width: 50,\n    backgroundColor: 'orange',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 1\n  },\n  button: {\n    borderRadius: 10,\n    height: 25,\n    width: 100,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 1\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15\n  }\n});","map":{"version":3,"names":["React","Pressable","StyleSheet","Text","View","Input","TextInput","Alert","useState","useRef","jsx","_jsx","jsxs","_jsxs","SimpleCalc","_useState","_useState2","_slicedToArray","visible","setVisible","inputRef","_useState3","_useState4","result","setResult","toggleVisibility","plus","e","Number","current","value","minus","times","divide","resetInput","setInputRef","resetAll","style","styles","body","children","onPress","h1","fontStyle","showCalc","hide","ref","inputbox","placeholder","inputMode","buttonRow","opButton","buttonLabel","button","create","flex","backgroundColor","alignItems","height","marginTop","fontWeight","fontSize","textAlign","display","width","margin","borderStyle","borderWidth","borderColor","padding","flexDirection","borderRadius","justifyContent","color"],"sources":["/home/chrystal/Projects/expo-apps/playground/components/screens/Projects/SimpleCalc.js"],"sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet, Text, View, Input, TextInput, Alert } from 'react-native';\nimport { useState, useRef } from 'react';\n\nexport default function SimpleCalc(){\n    const [visible, setVisible] = useState(true);\n    const inputRef = useRef(null); \n    //const resultRef = useRef(null); \n    const [result, setResult] = useState(0); \n   \n    function toggleVisibility(){\n        return setVisible(!visible);\n    }\n\n    function plus(e) { \n        //e.preventDefault(); \n        setResult((result) => result + Number(inputRef.current.value));\n        Alert(result,'+',inputRef.current.value);\n    }; \n   \n    function minus(e) { \n        //e.preventDefault(); \n        setResult((result) => result - Number(inputRef.current.value));\n    };\n   \n    function times(e) { \n        //e.preventDefault(); \n        setResult((result) => result * Number(inputRef.current.value));\n    }; \n   \n    function divide(e) { \n        //e.preventDefault(); \n        if(result !== 0){\n            setResult((result) => result / Number(inputRef.current.value));\n        };\n    };\n   \n    function resetInput(e) { \n        //e.preventDefault();\n        setInputRef(null);\n    };\n   \n    function resetAll(e) { \n        //e.preventDefault();\n        setResult(0);\n        setInputRef(null);\n    }; \n    return(\n        <View style={styles.body}>\n            <Pressable onPress={toggleVisibility}>\n                <Text style={styles.h1}>Simple Calculator</Text>\n                <Text>A task from a React Education Course to create the simplest working calculator. </Text>\n                <Text style={{fontStyle: 'italic'}}>Click to view.</Text>\n            </Pressable>\n            <View style={visible ? styles.showCalc : styles.hide}>\n                <Text style={styles.result}>\n                    {result} \n                </Text>\n                    <TextInput\n                        ref={inputRef}\n                        style={styles.inputbox}\n                        placeholder=\"Type a number\" \n                        inputMode=\"numeric\"\n                    ></TextInput>\n                    <View style={styles.buttonRow}>\n                        <Pressable style={styles.opButton} onPress={plus}>\n                            <Text style={styles.buttonLabel}>+</Text>\n                        </Pressable>\n                        <Pressable style={styles.opButton} onPress={minus}>\n                            <Text style={styles.buttonLabel}>-</Text>\n                        </Pressable>\n                        <Pressable style={styles.opButton} onPress={times}>\n                            <Text style={styles.buttonLabel}>*</Text>\n                        </Pressable>\n                        <Pressable style={styles.opButton} onPress={divide}>\n                            <Text style={styles.buttonLabel}>/</Text>\n                        </Pressable>\n                    </View>\n                    <View style={styles.buttonRow}>\n                        <Pressable style={styles.button} onPress={resetInput}>\n                            <Text style={styles.buttonLabel}>Reset Input</Text>\n                        </Pressable>\n                        <Pressable style={styles.button} onPress={resetAll}>\n                            <Text style={styles.buttonLabel}>Reset All</Text>\n                        </Pressable>\n                    </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    body:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        height: 500,\n        marginTop: 10,\n    },\n    h1:{\n        fontWeight:\"bold\",\n        fontSize: 18,\n        textAlign: 'center',\n    },\n    hide:{\n        display: 'none',\n        height: 10,\n    },\n    showCalc:{\n        //display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        width: 300,\n    },\n    result:{\n        margin:5,\n    },\n    inputbox:{\n        margin:5,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderColor: 'orange',\n        padding: 2,\n    },\n    buttonRow:{\n        flexDirection: 'row',\n        width: 'auto',\n        alignItems: 'center',\n    },\n    opButton:{\n        borderRadius: 10, \n        height: 25,\n        width: 50,\n        backgroundColor: 'orange',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 1,\n    },\n    button:{\n        borderRadius: 10, \n        height: 25,\n        width: 100,\n        backgroundColor: 'red',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 1,\n    },\n    buttonLabel:{\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}