{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function WildPet() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  function toggleVisibility() {\n    return setVisible(!visible);\n  }\n  ;\n  var happyWolf = require(\"./assets/tempHappywolf.png\");\n  var angryWolf = require(\"./assets/tempAngrywolf.png\");\n  var _useState3 = useState(80),\n    _useState4 = _slicedToArray(_useState3, 2),\n    happyStatus = _useState4[0],\n    setHappyStatus = _useState4[1];\n  var _useState5 = useState(80),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fullStatus = _useState6[0],\n    setFullStatus = _useState6[1];\n  var _useState7 = useState(80),\n    _useState8 = _slicedToArray(_useState7, 2),\n    entertainedStatus = _useState8[0],\n    setEntertainedStatus = _useState8[1];\n  var _useState9 = useState(\"I am your pet!\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    petMessage = _useState10[0],\n    setPetMessage = _useState10[1];\n  var _useState11 = useState(happyWolf),\n    _useState12 = _slicedToArray(_useState11, 2),\n    mood = _useState12[0],\n    setMood = _useState12[1];\n  var myPet = {\n    petName: 'Fido'\n  };\n  function updateMoodAndMessage() {\n    if (fullStatus > 70 && happyStatus > 70 && entertainedStatus > 70) {\n      setPetMessage(\"I am loved!\");\n      setMood(happyWolf);\n    } else if (fullStatus <= 70 || happyStatus <= 70 || entertainedStatus <= 70) {\n      setMood(angryWolf);\n      setPetMessage(\"I need you.\");\n    }\n    ;\n    return;\n  }\n  ;\n  function pet() {\n    setHappyStatus(happyStatus + 10);\n    setEntertainedStatus(entertainedStatus + 10);\n    updateMoodAndMessage();\n    return;\n  }\n  function feed() {\n    setFullStatus(fullStatus + 10);\n    setHappyStatus(happyStatus + 10);\n    updateMoodAndMessage();\n    return;\n  }\n  ;\n  function play() {\n    setEntertainedStatus(entertainedStatus + 10);\n    setHappyStatus(happyStatus + 10);\n    setFullStatus(fullStatus - 10);\n    updateMoodAndMessage();\n    return;\n  }\n  ;\n  return _jsx(View, {\n    style: styles.body\n  });\n}\n;\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    height: 450,\n    marginTop: 10\n  },\n  h1: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  hide: {\n    display: 'none',\n    height: 10\n  },\n  showPet: {\n    alignItems: 'center',\n    height: 'auto',\n    width: 300\n  },\n  petContainer: {\n    height: 200,\n    width: 'auto',\n    alignItems: 'center'\n  },\n  petMood: {\n    backgroundColor: '#fff'\n  },\n  img: {\n    height: 150,\n    width: 150\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    height: 50,\n    width: 'auto',\n    alignItems: 'center'\n  },\n  button: {\n    borderRadius: 10,\n    height: 25,\n    width: 60,\n    backgroundColor: 'blue',\n    alignContent: 'center',\n    justifyContent: 'center',\n    margin: 1\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","Pressable","StyleSheet","Text","View","Image","useState","jsx","_jsx","WildPet","_useState","_useState2","_slicedToArray","visible","setVisible","toggleVisibility","happyWolf","require","angryWolf","_useState3","_useState4","happyStatus","setHappyStatus","_useState5","_useState6","fullStatus","setFullStatus","_useState7","_useState8","entertainedStatus","setEntertainedStatus","_useState9","_useState10","petMessage","setPetMessage","_useState11","_useState12","mood","setMood","myPet","petName","updateMoodAndMessage","pet","feed","play","style","styles","body","create","flex","backgroundColor","alignItems","height","marginTop","h1","fontWeight","fontSize","textAlign","hide","display","showPet","width","petContainer","petMood","img","buttonRow","flexDirection","button","borderRadius","alignContent","justifyContent","margin","buttonLabel","color"],"sources":["/home/chrystal/Projects/expo-apps/playground/components/screens/Projects/WildPet.js"],"sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet, Text, View, Image } from 'react-native';\nimport { useState } from 'react';\n//import tempHappywolf from './assets/tempHappywolf.png';\n//import tempAngrywolf from './assets/tempAngrywolf.png';\n\n\nexport default function WildPet(){\n    const [visible, setVisible] = useState(true);\n   \n    function toggleVisibility(){\n        return setVisible(!visible);\n    };\n\n    const happyWolf = require('./assets/tempHappywolf.png');\n    const angryWolf = require('./assets/tempAngrywolf.png');  \n\n    const [happyStatus, setHappyStatus] = useState(80);\n    const [fullStatus, setFullStatus] = useState(80);\n    const [entertainedStatus, setEntertainedStatus] = useState(80);\n    const [petMessage, setPetMessage] = useState(\"I am your pet!\");\n    const [mood, setMood] = useState(happyWolf);\n\n    var myPet = {\n        petName: 'Fido',\n        //additional details to be added.\n    };\n\n    function updateMoodAndMessage () {\n        if(fullStatus > 70 && happyStatus > 70 && entertainedStatus > 70){\n            setPetMessage(\"I am loved!\");\n            setMood(happyWolf);\n            //console.log(mood);\n        }else if(fullStatus <= 70 || happyStatus <= 70 || entertainedStatus <= 70){\n            setMood(angryWolf);\n            setPetMessage(\"I need you.\");\n            //console.log(mood);\n        };\n        //addition outputs to be added.\n        return;\n    };\n\n    function pet () {\n        setHappyStatus(happyStatus+10);\n        setEntertainedStatus(entertainedStatus+10);\n        //updateMessage();\n        updateMoodAndMessage();\n        //console.log('Pet:',happyStatus,fullStatus,entertainedStatus);\n        return;\n    }\n    function feed () {\n        setFullStatus(fullStatus+10);\n        setHappyStatus(happyStatus+10);\n        //updateMessage();\n        updateMoodAndMessage();\n        //console.log('Feed:',happyStatus,fullStatus,entertainedStatus);\n        return;\n    };\n    function play () {\n        setEntertainedStatus(entertainedStatus+10);\n        setHappyStatus(happyStatus+10);\n        setFullStatus(fullStatus-10);\n        //updateMessage();\n        updateMoodAndMessage();\n        //console.log('Play:',happyStatus,fullStatus,entertainedStatus);\n        return;\n    };\n \n    return(\n        <View style={styles.body}>\n            \n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    body:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        height: 450,\n        marginTop: 10,\n    },\n    h1:{\n        fontWeight:\"bold\",\n        fontSize: 18,\n        textAlign: 'center',\n    },\n    hide:{\n        display: 'none',\n        height: 10,\n    },\n    showPet:{\n        //display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        width: 300,\n    },\n    petContainer:{\n        height: 200,\n        width: 'auto',\n        alignItems: 'center',\n    },\n    petMood:{\n        backgroundColor: '#fff',\n    },\n    img:{\n        height: 150,\n        width: 150,\n    },\n    buttonRow:{\n        flexDirection: 'row',\n        height: 50,\n        width: 'auto',\n        alignItems: 'center',\n    },\n    button:{\n        borderRadius: 10, \n        height: 25,\n        width: 60,\n        backgroundColor: 'blue',\n        alignContent: 'center',\n        justifyContent: 'center',\n        margin: 1,\n    },\n    buttonLabel: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 15,\n        textAlign: 'center',\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}