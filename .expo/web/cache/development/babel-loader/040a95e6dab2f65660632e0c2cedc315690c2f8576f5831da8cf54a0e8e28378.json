{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function WildPet() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  function toggleVisibility() {\n    return setVisible(!visible);\n  }\n  ;\n  var myPet = {\n    petName: 'Fido',\n    petStatus: '',\n    happy: 80,\n    full: 80,\n    entertained: 80,\n    updateStatus: function updateStatus() {\n      this.petStatus = \"I'm \";\n      if (this.full > 50 && this.happy > 50 && this.entertained > 50) {\n        this.petStatus = \"Content! \";\n      }\n      if (this.full <= 50) {\n        this.petStatus = +\"hungry, \";\n      }\n      if (this.happy <= 50) {\n        this.petStatus = +\"sad, \";\n      }\n      if (this.full <= 50) {\n        this.petStatus = +\"bored, \";\n      }\n      ;\n      this.petStatus = +\"Love me more.\";\n      return;\n    },\n    pet: function pet() {\n      this.happy = +10;\n      this.entertained = +10;\n      this.updateStatus();\n      return;\n    },\n    feed: function feed() {\n      this.full = +10;\n      this.happy = +10;\n      this.updateStatus();\n      return;\n    },\n    play: function play() {\n      this.entertained = +10;\n      this.happy = +10;\n      this.full = -10;\n      this.updateStatus();\n      return;\n    }\n  };\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsxs(Pressable, {\n      onPress: toggleVisibility,\n      children: [_jsx(Text, {\n        style: styles.h1,\n        children: \"My Wild Pet\"\n      }), _jsx(Text, {\n        children: \"Personal task, inspired by a popular digital pet game. \"\n      }), _jsx(Text, {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: \"Click to view.\"\n      })]\n    }), _jsxs(View, {\n      style: visible ? styles.show : styles.hide,\n      children: [_jsxs(View, {\n        style: styles.petContainer,\n        children: [_jsx(Text, {\n          children: myPet.petName\n        }), _jsx(Text, {\n          children: myPet.petStatus\n        })]\n      }), _jsxs(View, {\n        style: styles.buttonRow,\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: myPet.pet,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Pet\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: myPet.feed,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Feed\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: myPet.play,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Play\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    height: 'auto',\n    marginTop: 10\n  },\n  h1: {\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  hide: {\n    display: 'none'\n  },\n  show: {\n    display: 'flex'\n  },\n  petContainer: {\n    width: 200\n  },\n  buttonRow: {\n    height: 100,\n    justifyContent: 'space-evenly'\n  },\n  button: {\n    borderRadius: 10,\n    height: 25,\n    width: 100,\n    backgroundColor: 'blue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 1\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15\n  }\n});","map":{"version":3,"names":["React","Pressable","StyleSheet","Text","View","useState","useRef","jsx","_jsx","jsxs","_jsxs","WildPet","_useState","_useState2","_slicedToArray","visible","setVisible","toggleVisibility","myPet","petName","petStatus","happy","full","entertained","updateStatus","pet","feed","play","style","styles","body","children","onPress","h1","fontStyle","show","hide","petContainer","buttonRow","button","buttonLabel","create","flex","backgroundColor","alignItems","height","marginTop","fontWeight","fontSize","display","width","justifyContent","borderRadius","margin","color"],"sources":["/home/chrystal/Projects/expo-apps/playground/components/screens/Projects/WildPet.js"],"sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\nimport { useState, useRef } from \"react\";\n\nexport default function WildPet(){\n    const [visible, setVisible] = useState(false);\n   \n    function toggleVisibility(){\n        return setVisible(!visible);\n    };\n\n    var myPet = {\n        petName: 'Fido',\n        /*changeName: function (name) {\n            this.petName = name;\n            return;\n        },*/\n        petStatus: '',\n        happy: 80,\n        full: 80,\n        entertained: 80,\n        updateStatus: function () {\n            this.petStatus = \"I'm \";\n            if(this.full > 50 && this.happy > 50 && this.entertained > 50){\n                this.petStatus = \"Content! \"\n            }\n            if(this.full <= 50){\n                this.petStatus =+ \"hungry, \"\n            }\n            if(this.happy <= 50){\n                this.petStatus =+ \"sad, \"\n            }\n            if(this.full <= 50){\n                this.petStatus =+ \"bored, \"\n            };\n            this.petStatus =+ \"Love me more.\"\n            return;\n        },\n        pet: function () {\n            this.happy =+ 10;\n            this.entertained =+ 10;\n            this.updateStatus();\n            return;\n        },\n        feed: function () {\n            this.full =+ 10;\n            this.happy =+ 10;\n            this.updateStatus();\n            return;\n        },\n        play: function () {\n            this.entertained =+ 10;\n            this.happy =+ 10;\n            this.full =- 10;\n            this.updateStatus();\n            return;\n        },\n\n    };\n \n    return(\n        <View style={styles.body}>\n            <Pressable onPress={toggleVisibility}>\n                <Text style={styles.h1}>My Wild Pet</Text>\n                <Text>Personal task, inspired by a popular digital pet game. </Text>\n                <Text style={{fontStyle: 'italic'}}>Click to view.</Text>\n            </Pressable>\n            <View style={visible ? styles.show : styles.hide}>\n                <View style={styles.petContainer}>\n                    <Text>{myPet.petName}</Text>\n                    <Text>{myPet.petStatus}</Text>\n                </View>\n                <View style={styles.buttonRow}>\n                    <Pressable style={styles.button} \n                        onPress={myPet.pet}>\n                            <Text style={styles.buttonLabel}>Pet</Text>\n                    </Pressable> \n                    <Pressable style={styles.button} \n                        onPress={myPet.feed}>\n                            <Text style={styles.buttonLabel}>Feed</Text>\n                    </Pressable> \n                    <Pressable style={styles.button} \n                        onPress={myPet.play}>\n                            <Text style={styles.buttonLabel}>Play</Text>\n                    </Pressable> \n                </View> \n            </View>\n        </View>\n      );\n};\n\nconst styles = StyleSheet.create({\n    body:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: 10,\n    },\n    h1:{\n        fontWeight:\"bold\",\n        fontSize: 18,\n    },\n    hide:{\n        display: 'none',\n    },\n    show:{\n        display: 'flex',\n    },\n    petContainer:{\n        width: 200,\n    },\n    buttonRow:{\n        height: 100,\n        justifyContent: 'space-evenly',\n    },\n    button:{\n        borderRadius: 10, \n        height: 25,\n        width: 100,\n        backgroundColor: 'blue',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 1,\n    },\n    buttonLabel: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}